@model SIIR.Models.ViewModels.DocumentVM

<style>
    .split-layout {
        display: flex;
        gap: 1.5rem;
        min-height: calc(100vh - 100px);
        margin-top: 1rem;
    }

    .left-panel {
        flex: 0 0 400px;
        max-width: 400px;
    }

    .right-panel {
        flex: 1;
        min-width: 0;
    }

    .form-switch .form-check-input {
        width: 3em;
        height: 1.5em;
        margin-right: 0.5em;
        cursor: pointer;
    }

    .form-switch .form-check-label {
        cursor: pointer;
        padding-top: 0.25em;
    }

    .action-buttons .btn {
        margin-right: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .card-img-container {
        position: relative;
        padding-top: 100%;
        overflow: hidden;
    }

    .card-img-container img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .card-actions {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-start;
        padding: 0.5rem 0;
    }

    .document-header {
        padding: 1rem;
        border-bottom: 3px solid #007bff;
        margin-bottom: 1rem;
    }

    .document-title {
        color: #2c3e50;
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }

    .document-description {
        color: #6c757d;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }

    .document-status {
        padding: 0.5em 1em;
        border-radius: 20px;
        font-weight: 500;
        display: inline-block;
    }

    .status-pending {
        background-color: #ffd700;
        color: #000;
    }

    .status-approved {
        background-color: #28a745;
        color: #fff;
    }

    .status-rejected {
        background-color: #dc3545;
        color: #fff;
    }

    .preview-frame {
        width: 100%;
        height: calc(100vh - 120px);
        border: 1px solid #dee2e6;
        border-radius: 4px;
    }

    .student-info {
        background-color: #f8f9fa;
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 4px;
    }

    .preview-container {
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        height: 100%;
    }
</style>

<div class="container-fluid">
    <div class="split-layout">
        <!-- Panel Izquierdo -->
        <div class="left-panel">
            <div class="card">
                <div class="document-header">
                    <h1 class="document-title">@Model.Document.DocumentCatalog.Name</h1>
                    <p class="document-description">@Model.Document.DocumentCatalog.Description</p>
                    <a asp-action="Index" asp-route-studentId="@Model.Document.StudentId" class="btn btn-secondary btn-sm">
                        <i class="fas fa-arrow-left"></i> Volver
                    </a>
                </div>

                <div class="card-body">
                    <!-- Información del Estudiante -->
                    <div class="student-info">
                        <h3 class="h5 mb-3">Información del Estudiante</h3>
                        <p class="mb-1"><strong>Nombre:</strong> @Model.Student.Name @Model.Student.LastName</p>
                        <p class="mb-1"><strong>No. Control:</strong> @Model.Student.ControlNumber</p>
                        <p class="mb-0"><strong>Carrera:</strong> @Model.Student.Career</p>

                        @{
                            var statusClass = Model.Document.Status switch
                            {
                                DocumentStatus.Pending => "status-pending",
                                DocumentStatus.Approved => "status-approved",
                                DocumentStatus.Rejected => "status-rejected",
                                _ => ""
                            };

                            var statusText = Model.Document.Status switch
                            {
                                DocumentStatus.Pending => "Pendiente",
                                DocumentStatus.Approved => "Aprobado",
                                DocumentStatus.Rejected => "Rechazado",
                                _ => "Desconocido"
                            };

                            var statusIcon = Model.Document.Status switch
                            {
                                DocumentStatus.Pending => "clock",
                                DocumentStatus.Approved => "check",
                                DocumentStatus.Rejected => "times",
                                _ => "question"
                            };
                        }
                        <div class="mt-3">
                            <span class="document-status @statusClass">
                                <i class="fas fa-@statusIcon me-1"></i>@statusText
                            </span>
                        </div>
                    </div>

                    <!-- Botones de Acción -->
                    <div class="action-buttons">
                        <div class="card-actions">
                            <a asp-action="Download" asp-route-id="@Model.Document.Id" class="btn btn-primary">
                                <i class="fas fa-download me-1"></i>Descargar
                            </a>

                            @if (Model.Document.Status == DocumentStatus.Pending)
                            {
                                <button type="button" class="btn btn-success" onclick="approveDocument(@Model.Document.Id)">
                                    <i class="fas fa-check me-1"></i>Aprobar
                                </button>
                                <button type="button" class="btn btn-danger" onclick="rejectDocument(@Model.Document.Id)">
                                    <i class="fas fa-times me-1"></i>Rechazar
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Panel Derecho - Previsualización -->
        <div class="right-panel">
            <div class="preview-container">
                @{
                    var fileExtension = System.IO.Path.GetExtension(Model.Document.Url)?.ToLower();
                    var fileUrl = Url.Content("~/" + Model.Document.Url.TrimStart('\\'));
                }

                @if (new[] { ".pdf" }.Contains(fileExtension))
                {
                    <iframe src="@fileUrl" class="preview-frame" type="application/pdf"></iframe>
                }
                else if (new[] { ".jpg", ".jpeg", ".png", ".gif" }.Contains(fileExtension))
                {
                    <div class="card-img-container">
                        <img src="@fileUrl" alt="@Model.Document.DocumentCatalog.Name">
                    </div>
                }
                else if (new[] { ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx" }.Contains(fileExtension))
                {
                    <div class="text-center p-4">
                        <i class="fas fa-file fa-3x mb-3 text-muted"></i>
                        <h4>Previsualización no disponible</h4>
                        <p class="text-muted">Este tipo de documento no puede ser previsualizado directamente. Por favor, descargue el archivo para verlo.</p>
                    </div>
                }
                else
                {
                    <div class="text-center p-4">
                        <i class="fas fa-question-circle fa-3x mb-3 text-muted"></i>
                        <h4>Formato no soportado</h4>
                        <p class="text-muted">Este tipo de archivo no puede ser previsualizado. Por favor, descargue el archivo para verlo.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<form id="statusForm" asp-action="ChangeStatus" method="post">
    <input type="hidden" id="documentId" name="id" />
    <input type="hidden" id="documentStatus" name="status" />
</form>

@section Scripts {
    <script src="~/js/documentDetails.js"></script>
}