@model SIIR.Models.Team
@{
    ViewData["Title"] = "Generate Certificate";
}

<h1>@ViewData["Title"]</h1>

<style>
    .no-hover:hover {
        background-color: transparent;
        color: inherit;
    }

    .modal-header {
        background-color: #1a3c6e;
        color: white;
    }

    .card-img-top {
        max-height: 150px;
        object-fit: cover;
        object-position: center;
        width: 100%;
    }

    .checkbox {
        background-color: white;
        color: black;
        border: none;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        text-align: center;
    }

    /* Cambia el color cuando el checkbox está seleccionado */
    .btn-check:checked + .checkbox {
        background-color: #0d6efd;
        color: white;
    }

    .checkbox:hover {
        background-color: white;
        color: inherit;
    }

    .checkbox-div {
        border: none;
    }

    .title {
        background-color: #1a3c6e;
        min-height: 50px;
    }

    .card {
        max-width: 200px;
        max-height: 250px;
        margin: 0 auto;
    }

    .btn-generar-cedula {
        background-color: #1a3c6e;
    }

    .btn-x {
        color: white;
        background-color: transparent;
        border: none;
    }

    .image-placeholder {
        height: 150px; /* Ajusta según el tamaño que quieras */
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 70px;
    }

    @@media (max-width: 400px) {
        .row-cols-custom-1 {
            display: flex;
            flex-wrap: wrap;
        }
    
        .row-cols-custom-1 .col {
            flex: 0 0 100%; /* 1 columna en pantallas pequeñas */
            max-width: 100%;
        }
    }
</style>

<!-- Button trigger modal -->
<p></p>
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Generar cédula</h1>
                <button type="button" class="btn-x" data-bs-dismiss="modal" aria-label="Close"><i class="fa-solid fa-x"></i></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-end align-content-center mb-0 gap-2">
                    <p class="fs-5 checkbox-div">Todos: </p>
                    <div class="checkbox-div mt-0">
                        <input type="checkbox" class="btn-check" id="checkboxAll" autocomplete="off">
                        <label class="btn btn-sm checkbox" for="checkboxAll">
                            <i class="fa-solid fa-check"></i>
                        </label>
                    </div>
                </div>

                <div class="row row-cols-custom-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3 students-container">
                    <!-- Las tarjetas se generarán aquí -->
                </div>

                <div class="not-found text-center mt-4">
                    <i class="fa-solid fa-ban fs-2" style="color: red"></i>
                    <p class="fs-2 mb-0">No se encontraron elementos</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary btn-generar-cedula">Generar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
      // Variable global para almacenar todos los estudiantes obtenidos
    let allStudents = [];

    $(document).ready(function () {
        $('#exampleModal').on('show.bs.modal', function () {
            $('#checkboxAll').prop('checked', false);
            const teamId = @Model.Id;

            $.ajax({
                url: '/Coach/Team/GetAllStudents',
                type: 'GET',
                data: { teamId: teamId },
                success: function (response) {
                    if (response.data && response.data.length > 0) {
                        allStudents = response.data;  // Guardar todos los estudiantes en la variable global
                        let studentsHtml = '';
                        $(".checkbox-div").show();
                        $('.not-found').hide();

                        response.data.forEach(student => {
                            const controlNumber = student.controlNumber ? student.controlNumber : '---';
                            const studentImage = student.imageUrl
                                ? `
    <img src="${student.imageUrl}" class="card-img-top h-100" alt="Imagen del jugador" />`
                                : `<div class="image-placeholder">
        <i class="fa-regular fa-user"></i>
    </div>`;

                            studentsHtml += `
    <div class="col">
        <div class="card h-100 position-relative">
            ${studentImage}
            <div class="position-absolute top-0 end-0 m-2">
                <input type="checkbox" class="btn-check student-checkbox" id="checkbox${student.id}" autocomplete="off">
                <label class="btn btn-sm checkbox" for="checkbox${student.id}">
                    <i class="fa-solid fa-check"></i>
                </label>
            </div>
            <div class="card-body p-0 text-center">
                <h5 class="text-center mb-0 ps-2 pe-2 text-white title fs-6 d-flex align-items-center justify-content-center">
                    ${student.name} ${student.lastName} ${student.secondLastName}
                </h5>
                <p class="mb-0 control-number">${controlNumber}</p>
            </div>
        </div>
    </div>
                            `;
                        });

                        $('.students-container').html(studentsHtml);
                    } else {
                        $('.not-found').show();
                        $(".checkbox-div").hide();
                    }
                },
                error: function (error) {
                    console.log("Error al cargar los estudiantes:", error);
                }
            });

            $('#checkboxAll').change(function () {
                const isChecked = $(this).is(':checked');
                $('.student-checkbox').prop('checked', isChecked).trigger('change');
            });

            $(document).on('change', '.student-checkbox', function () {
                if (!$(this).is(':checked')) {
                    $('#checkboxAll').prop('checked', false);
                } else {
                    const allChecked = $('.student-checkbox:checked').length === $('.student-checkbox').length;
                    $('#checkboxAll').prop('checked', allChecked);
                }
            });
        });

        $('.btn-generar-cedula').click(function () {
            const teamName = "@Model.Name"; // Asumiendo que el nombre del equipo es una propiedad 'Name' de Team
            const coachTeam = @Html.Raw(Json.Serialize(Model.Coach));
            // Filtra los estudiantes seleccionados a partir de la lista completa almacenada
            const selectedStudents = allStudents.filter(student =>
                $(`#checkbox${student.id}`).is(':checked')
            );

            if (selectedStudents.length === 0) {
                alert("No hay estudiantes seleccionados.");
                return;
            }

            // Envía los objetos de estudiantes seleccionados al controlador
            $.ajax({
                url: '/Coach/Team/GenerateCertificate',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ 
                    students: selectedStudents,
                    team: teamName,
                    coach: coachTeam
                }),
                xhrFields: { responseType: 'blob' },
                success: function (blob) {
                    const link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = "Cedula.pdf";
                    link.click();
                },
                error: function (error) {
                    console.log("Error al generar el certificado:", error);
                }
            });
        });
    });
    </script>
}
