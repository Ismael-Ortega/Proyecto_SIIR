@model SIIR.Models.Coach

@{
    ViewData["Title"] = "Home Page";
    Layout = "_LayoutWithoutNavBar";
}

<style>
    .welcome-text {
        min-width: 150px;
    }

    .title {
        background-color: #1a3c6e;
    }

    .card {
        min-width: 150px;
        max-width: 400px;
        margin: 0 auto;
    }

    .card-img-top {
        max-height: 125px;
        object-fit: cover; 
        object-position: top; 
        width: 100%; 
    }

    .search-container {
        background-color: rgba(0, 0, 0, 0.05);
        border-radius: 5px;
        color: #000;
    }

    .search-input {
        background-color: transparent;
        border: none;
        outline: none;
        box-shadow: none;
    }

    .search-input:focus {
        background-color: transparent; 
        outline: none;
        box-shadow: none;
    }

    .icon-search {
        font-size: 1.2rem; 
        color: rgba(0, 0, 0, 0.5); 
    }

    .btn-search {
        background-color: #1a3c6e;
        color: white;
        border: 1px solid #1a3c6e;
        padding: 8px 16px;
        border-radius: 5px; 
    }

    #popoverContent {
        width: 500px; 
        background-color: red;
    }

    .filter-badge {
        cursor: pointer;
        font-size: 0.8rem; 
    }

    .custom-popover {
        max-width: 335px; 
        width: 100%; 
        border: none;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
        font-family: 'Montserrat', sans-serif;

    }

    .popover-header {
        font-size: calc(1.275rem + 0.3vw); /*Font size 4 de bootstrap*/
        background-color: #1a3c6e;
        color: white;
    }

    .bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
        border-bottom-color: #1a3c6e;
    }

</style>

<div class="container text-center" id="container-main">
    <h1 class="display-2 welcome-text">Bienvenido @Model.Name</h1>

    <div class="search search-container p-2">
        <div class="input-group d-flex align-items-center">
            <i class="fa-solid fa-magnifying-glass icon-search mx-2"></i>
            <input class="form-control search-input" placeholder="Busca un equipo...">
            <div><button class="btn-search me-2"><i class="fa-solid fa-list"></i></button></div>
            <div>
                <button class="btn-search" data-bs-title="Filtros" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-custom-class="custom-popover" data-bs-offset="-110,15">
                    <i class="fa-solid fa-filter"></i> Filtrar
                </button>
            </div>
        </div>
    </div>

    <div id="popoverContent" style="display:none;">
        <p class="fs-5 mb-2" style="background-color:#1a3c6e">Categoría de género</p>
        <div class="d-flex flex-wrap gap-2 mb-3">
            <span class="badge rounded-pill bg-secondary filter-badge">Masculino</span>
            <span class="badge rounded-pill bg-secondary filter-badge">Femenino</span>
            <span class="badge rounded-pill bg-secondary filter-badge">Mixto</span>
        </div>
        <hr style="border: 2px solid #1a3c6e; margin: 10px 0;">
        <p class="fs-5 mb-1">Categoría de grupo</p>
        <div class="d-flex flex-wrap gap-2 mb-2">
            <span class="badge rounded-pill bg-secondary filter-badge">Deportivo</span>
            <span class="badge rounded-pill bg-secondary filter-badge">Cultural</span>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-3 py-4" id="teamsContainer">
    </div>

    <div class="not-found" style="display: none;">
        <i class="fa-solid fa-ban fs-2" style="color: red"></i>
        <p class="fs-2">No se encontraron elementos</p>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var content = $('#popoverContent').html();
            var isPopoverVisible = false; // Variable global para verificar si el popover está visible

            var genderCategories = [];
            var groupCategories = [];

            // Inicializar el popover con contenido HTML
            $('[data-bs-toggle="popover"]').popover({
                html: true,
                content: content
            });

            // Eventos de Bootstrap para saber cuándo el popover se muestra y oculta
            $('[data-bs-toggle="popover"]').on('shown.bs.popover', function () {
                isPopoverVisible = true;
            });

            $('[data-bs-toggle="popover"]').on('hidden.bs.popover', function () {
                isPopoverVisible = false;
            });

            // Función para cargar los equipos mediante AJAX
            function cargarEquipos() {
                var searchTerm = $(".search-input").val(); // Obtener el valor de búsqueda

                if (isPopoverVisible) {
                    // Obtener los filtros seleccionados para género (masculino, femenino)
                    genderCategories = $(".filter-badge.bg-primary, .filter-badge.bg-danger")
                        .map(function () {
                            return $(this).text().toLowerCase();
                        }).get();

                    // Obtener los filtros seleccionados para grupos (deportivo, cultural)
                    groupCategories = $(".filter-badge.bg-success, .filter-badge.bg-warning")
                        .map(function () {
                            return $(this).text().toLowerCase();
                        }).get();
                }

                $.ajax({
                    url: '/Coach/Home/GetAllTeams',
                    type: 'GET',
                    data: {
                        genderCategories: JSON.stringify(genderCategories),
                        groupCategories: JSON.stringify(groupCategories),
                        searchTerm: searchTerm
                    },
                    success: function (data) {
                        var teamsContainer = $("#teamsContainer");
                        teamsContainer.empty(); // Limpiar el contenedor antes de agregar las tarjetas

                        if (data.data.length == 0) {
                            $(".not-found").show();
                        } else {
                            $(".not-found").hide();
                        }

                        // Iterar sobre los equipos obtenidos y crear las tarjetas
                        data.data.forEach(function (team) {
                            var teamCategory = team.category ? team.category.toLowerCase() : 'sin categoría';
                            var representativeCategory = team.representative && team.representative.category
                                ? team.representative.category.toLowerCase()
                                : 'sin categoría';

                            var teamCategoryClass = 'bg-secondary';
                            switch (teamCategory) {
                                case 'femenino':
                                    teamCategoryClass = 'bg-danger';
                                    break;
                                case 'masculino':
                                    teamCategoryClass = 'bg-primary';
                                    break;
                            }

                            var representativeCategoryClass = 'bg-secondary';
                            switch (representativeCategory) {
                                case 'deportivo':
                                    representativeCategoryClass = 'bg-success';
                                    break;
                                case 'cultural':
                                    representativeCategoryClass = 'bg-warning';
                                    break;
                            }

                            var categoryBadges = `
                                    <span class="badge rounded-pill ${teamCategoryClass}">${team.category}</span>
                                    <span class="badge rounded-pill ${representativeCategoryClass}">${team.representative.category}</span>
                                `;

                            var cardHtml = `
                                    <div class="col">
                                        <div class="card h-100">
                                            <img src="${team.imageUrl}" class="card-img-top h-100" alt="Imagen del equipo" />
                                            <p class="text-center fs-6 py-2 mb-0 text-white title">${team.name.toUpperCase()}</p>
                                            <div class="card-body">
                                                <div class="d-flex flex-wrap gap-2 mb-2">
                                                    ${categoryBadges}
                                                </div>
                                                <div class="d-flex justify-content-end fs-5">
                                                    <i class="fa-solid fa-eye me-3" style="color: #1a3c6e"></i>
                                                    <i class="fa-solid fa-file-arrow-down" style="color: #2e8b57"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>`;

                            teamsContainer.append(cardHtml);
                        });
                    },
                    error: function (error) {
                        console.log("Error al cargar los equipos:", error);
                    }
                });
            }

            // Capturar el evento de búsqueda y filtrar los equipos
            $(".search-input").on("input", function () {
                cargarEquipos(); // Llamar a la función con filtros y búsqueda
            });

            // Manejo de los filtros
            $(document).on('click', '.filter-badge', function () {
                var $this = $(this);

                // Definir colores según el filtro
                var filterType = $this.text().toLowerCase();

                // Cambiar color según el filtro seleccionado
                switch (filterType) {
                    case 'masculino':
                        $this.toggleClass('bg-primary bg-secondary');
                        break;
                    case 'femenino':
                        $this.toggleClass('bg-danger bg-secondary');
                        break;
                    case 'deportivo':
                        $this.toggleClass('bg-success bg-secondary');
                        break;
                    case 'cultural':
                        $this.toggleClass('bg-warning bg-secondary');
                        break;
                    case 'mixto':
                        $this.toggleClass('bg-info bg-secondary');
                        break;
                    default:
                        $this.toggleClass('bg-dark bg-secondary');
                        break;
                }

                // Llamar a cargarEquipos() también cuando se modifiquen los filtros
                cargarEquipos();
            });

            // Llamar a la función al cargar la página para mostrar los equipos iniciales
            cargarEquipos();
        });
    </script>

}

