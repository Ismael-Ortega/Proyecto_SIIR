@model SIIR.Models.ViewModels.DocumentVM

@* Estilos CSS para la vista *@
<style>
    body {
        background-color: #f8f9fa;
    }

    .info-container {
        max-width: 900px;
        margin: 2vw auto;
    }

    /* Estilos para el botón primario y su estado hover */
    .btn-primary {
        background-color: #1a3c6e;
        border-color: #1a3c6e;
    }

    .btn-primary:hover {
        background-color: #15305a;
        border-color: #15305a;
    }

    /* Estilo para la tarjeta de cada documento */
    .document-card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    /* Estilos para el título del documento */
    .document-title {
        color: #1a3c6e;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }
    
    /* Estilos para la descripción del documento */
    .document-description {
        color: #6c757d;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }
    
    /* Estilos para el indicador de estado del documento */
    .document-status {
        font-size: 0.9rem;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        background-color: #e9ecef;
        display: inline-block;
        margin-bottom: 1rem;
    }

    /* Contenedor para los botones de acción */
    .actions-container {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }
    /* Estilos para los botones de acción */
    .btn-action {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    /* Estilos para el input de tipo archivo */
    .form-control[type="file"] {
        padding: 0.375rem 0.75rem;
    }

    .form-control[type="file"]::file-selector-button {
        padding: 0.375rem 0.75rem;
        margin: -0.375rem 0.75rem -0.375rem -0.75rem;
        background-color: #e9ecef;
        border: 0;
        border-right: 1px solid #ced4da;
    }
    /* Estilos para los estados de los documentos */
    .status-pending {
        background-color: #ffd700;
        color: #000;
    }

    .status-approved {
        background-color: #28a745;
        color: #fff;
    }

    .status-rejected {
        background-color: #dc3545;
        color: #fff;
    }
</style>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
<input type="hidden" name="__RequestVerificationToken" value="@token" />

<div class="container info-container">
    
    @* Encabezado con título y botones principales *@

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Documentos</h2>
        <div>
            <a asp-area="Student" asp-controller="Home" asp-action="Index" class="btn btn-secondary me-2">Regresar</a>
            @* <button type="submit" form="documentForm" class="btn btn-primary">
                <i class="fa-solid fa-save me-2"></i>Guardar
            </button> *@
        </div>
    </div>

    @* Formulario para subir documentos *@

    @* <form id="documentForm" method="post" enctype="multipart/form-data" asp-action="SaveDocuments"> *@
    <form id="documentForm" method="post" enctype="multipart/form-data">
        @* Iteración sobre la lista de documentos *@
        @foreach (var document in Model.ListDocumenCatalog)
        {
            var existingDoc = Model.StudentDocuments?.FirstOrDefault(d => d.DocumentCatalogId.ToString() == document.Value);
            var statusClass = existingDoc?.Status switch
            {
                DocumentStatus.Pending => "status-pending",
                DocumentStatus.Approved => "status-approved",
                DocumentStatus.Rejected => "status-rejected",
                _ => ""
            };

            @* Tarjeta individual para cada documento *@
            <div class="document-card">
                <h5 class="document-title">@document.Text</h5>
                <p class="document-description">@(!string.IsNullOrEmpty(document.Group?.Name) ? document.Group.Name : "Sin descripción disponible")</p>
               
                <div class="document-status @statusClass">
                    <i class="fa-solid fa-circle-info me-1"></i>
                    @(existingDoc?.Status switch
                    {
                        DocumentStatus.Pending => "Pendiente",
                        DocumentStatus.Approved => "Aprobado",
                        DocumentStatus.Rejected => "Rechazado",
                        _ => "No subido"
                    })
                </div>

                @* Contenedor para el input de archivo y botones de acción *@
                <div class="row align-items-center">

                    @* Input para subir archivo *@
                    <div class="col-md-6 mb-3 mb-md-0">
                        <input type="file" class="form-control" id="file_@document.Value" name="files" />
                    </div>

                    @* Contenedor de botones de acción *@
                    <div class="col-md-6">
                        <div class="actions-container justify-content-md-end">
                            
                            <button type="button"
                                    class="btn btn-primary btn-action btn-save-document"
                                    data-document-id="@document.Value">
                                <i class="fa-solid fa-save"></i> Guardar
                            </button>
                            <button type="button"
                                    class="btn btn-outline-success btn-action btn-download-document"
                                    data-document-id="@document.Value"
                                    @(existingDoc == null ? "disabled" : "")>
                                <i class="fa-solid fa-download"></i> Descargar
                            </button>
                            <button type="button"
                                    class="btn btn-outline-danger btn-action btn-delete-document"
                                    data-document-id="@document.Value"
                                    @(existingDoc == null ? "disabled" : "")>
                                <i class="fa-solid fa-trash"></i> Eliminar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </form>
</div>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }

    <script>
        $(document).ready(function () {
            // Configuración global de toastr
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "timeOut": "3000"
            };

            // Constantes para mensajes y configuraciones comunes
            const MESSAGES = {
                SELECT_FILE: 'Por favor seleccione un archivo',
                CONFIRM_DELETE: '¿Está seguro de que desea eliminar este documento? Esta acción no se puede deshacer.',
                GENERIC_ERROR: 'Error al procesar la solicitud'
            };

            // Función para manejar errores AJAX
            function handleAjaxError(xhr, status, error, defaultMessage) {
                console.error('Error:', error);
                console.error('Status:', status);
                console.error('Response:', xhr.responseText);

                let errorMessage = defaultMessage;
                try {
                    const response = JSON.parse(xhr.responseText);
                    errorMessage = response.message || defaultMessage;
                } catch (e) {
                    console.error('Error al parsear respuesta:', e);
                }
                toastr.error(errorMessage);
            }

            // Función para actualizar estado del botón
            function updateButtonState(button, isLoading, loadingText, originalHtml) {
                button.prop('disabled', isLoading);
                button.html(isLoading ?
                    `<i class="fa-solid fa-spinner fa-spin"></i> ${loadingText}` :
                    originalHtml
                );
            }

            // Manejador para guardar documentos
            $('.btn-save-document').click(function (e) {
                e.preventDefault();
                const documentId = $(this).data('document-id');
                const fileInput = $(`#file_${documentId}`);

                if (fileInput[0].files.length === 0) {
                    toastr.warning(MESSAGES.SELECT_FILE);
                    return;
                }

                const formData = new FormData();
                formData.append('file', fileInput[0].files[0]);
                formData.append('documentCatalogId', documentId);
                formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

                $.ajax({
                    url: '@Url.Action("SaveDocument", "Document")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            console.log('Documento guardado exitosamente');
                            toastr.success(response.message || 'Documento guardado exitosamente');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Error al guardar el documento');
                        }
                    },
                    error: function (xhr, status, error) {
                        handleAjaxError(xhr, status, error, 'Error al guardar el documento');
                    }
                });
            });

            // Manejador para descargar documentos
            $('.btn-download-document').click(function (e) {
                e.preventDefault();
                const button = $(this);
                const documentId = button.data('document-id');
                const originalHtml = button.html();

                updateButtonState(button, true, 'Descargando...', originalHtml);

                $.ajax({
                    url: '@Url.Action("DownloadDocument", "Document")',
                    type: 'GET',
                    data: { documentCatalogId: documentId },
                    xhrFields: { responseType: 'blob' },
                    success: function (response, status, xhr) {
                        const filename = xhr.getResponseHeader('content-disposition')
                            ? xhr.getResponseHeader('content-disposition').split('filename=')[1]
                            : `documento_${documentId}.pdf`;

                        const url = window.URL.createObjectURL(new Blob([response]));
                        const link = document.createElement('a');
                        link.href = url;
                        link.download = filename;
                        document.body.appendChild(link);
                        link.click();
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(link);
                        toastr.success('Documento descargado exitosamente');
                    },
                    error: function (xhr, status, error) {
                        handleAjaxError(xhr, status, error, 'Error al descargar el documento');
                    },
                    complete: function () {
                        updateButtonState(button, false, '', originalHtml);
                    }
                });
            });

            // Manejador para eliminar documentos
            $('.btn-delete-document').click(function (e) {
                e.preventDefault();
                const button = $(this);
                const documentId = button.data('document-id');
                const originalHtml = button.html();

                // Usar SweetAlert para la confirmación
                swal({
                    title: "¿Está seguro de borrar?",
                    text: MESSAGES.CONFIRM_DELETE,
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Sí, borrar!",
                    closeOnconfirm: true
                }, function () {
                    updateButtonState(button, true, 'Eliminando...', originalHtml);

                    $.ajax({
                        url: '@Url.Action("DeleteDocument", "Document")',
                        type: 'POST',
                        data: {
                            documentCatalogId: documentId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                toastr.success(response.message || 'Documento eliminado exitosamente');
                                location.reload();
                            } else {
                                toastr.error(response.message || 'Error al eliminar el documento');
                            }
                        },
                        error: function (xhr, status, error) {
                            handleAjaxError(xhr, status, error, 'Error al eliminar el documento');
                        },
                        complete: function () {
                            updateButtonState(button, false, '', originalHtml);
                        }
                    });
                });
            });
        });
    </script>
}