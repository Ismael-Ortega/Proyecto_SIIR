@model SIIR.Models.ViewModels.DocumentVM
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
<input type="hidden" name="__RequestVerificationToken" value="@token" />

<div class="container info-container">
    
    @* Encabezado con título y botones principales *@
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Documentos</h2>
        <div>
            <a asp-area="Student" asp-controller="Home" asp-action="Index" class="btn btn-secondary me-2">Regresar</a>
        </div>
    </div>

    @* Formulario para subir documentos *@
    <form id="documentForm" method="post" enctype="multipart/form-data">
        @* Iteración sobre la lista de documentos *@
        @foreach (var document in Model.ListDocumenCatalog)
        {
            var existingDoc = Model.StudentDocuments?.FirstOrDefault(d => d.DocumentCatalogId.ToString() == document.Value);
            var statusClass = existingDoc?.Status switch
            {
                DocumentStatus.Pending => "status-pending",
                DocumentStatus.Approved => "status-approved",
                DocumentStatus.Rejected => "status-rejected",
                _ => ""
            };

            @* Tarjeta individual para cada documento *@
            <div class="document-card">
                <h5 class="document-title">@document.Text</h5>
                <p class="document-description">@(!string.IsNullOrEmpty(document.Group?.Name) ? document.Group.Name : "Sin descripción disponible")</p>
               
                <div class="document-status @statusClass">
                    <i class="fa-solid fa-circle-info me-1"></i>
                    @(existingDoc?.Status switch
                    {
                        DocumentStatus.Pending => "Pendiente",
                        DocumentStatus.Approved => "Aprobado",
                        DocumentStatus.Rejected => "Rechazado",
                        _ => "No subido"
                    })
                </div>

                @* Contenedor para el input de archivo y botones de acción *@
                <div class="row align-items-center">

                    @* Input para subir archivo *@
                    <div class="col-md-6 mb-3 mb-md-0">
                        <input type="file" class="form-control" id="file_@document.Value" name="files" />
                    </div>

                    @* Contenedor de botones de acción *@
                    <div class="col-md-6">
                        <div class="actions-container justify-content-md-end">
                            
                            <button type="button"
                                    class="btn btn-primary btn-action btn-save-document"
                                    data-document-id="@document.Value">
                                <i class="fa-solid fa-save"></i> Guardar
                            </button>
                            <button type="button"
                                    class="btn btn-outline-success btn-action btn-download-document"
                                    data-document-id="@document.Value"
                                    @(existingDoc == null ? "disabled" : "")>
                                <i class="fa-solid fa-download"></i> Descargar
                            </button>
                            <button type="button"
                                    class="btn btn-outline-danger btn-action btn-delete-document"
                                    data-document-id="@document.Value"
                                    @(existingDoc == null ? "disabled" : "")>
                                <i class="fa-solid fa-trash"></i> Eliminar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </form>
</div>

@section Scripts {
    <script src="~/js/documentStudent.js"></script>
}